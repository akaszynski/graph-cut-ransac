name: Build and upload

on:
  pull_request:
  push:
    tags:
      - "*"
    branches:
      - "master"

concurrency:
  group: ${{ github.workflow }}-${{ github.ref }}
  cancel-in-progress: true

jobs:
  build_wheels:
    name: Build wheels on ${{ matrix.os }}
    runs-on: ${{ matrix.os }}
    strategy:
      matrix:
        os: [windows-latest]

    steps:
      - uses: actions/checkout@v3


      - name: Setup MSVC environment
        if: matrix.os == 'windows-latest'
        uses: ilammy/msvc-dev-cmd@v1

      - name: Cache OpenCV build
        if: matrix.os == 'windows-latest'
        id: cache-opencv
        uses: actions/cache@v3
        with:
          path: C:/opencv
          key: opencv-${{ runner.os }}-${{ hashFiles('scripts/build-opencv.ps1') }}

      - name: Build OpenCV on Windows
        if: matrix.os == 'windows-latest' && steps.cache-opencv.outputs.cache-hit != 'true'
        run: scripts/build-opencv.ps1
        shell: pwsh

      - name: Cache Eigen3 build
        if: matrix.os == 'windows-latest'
        id: cache-eigen3
        uses: actions/cache@v3
        with:
          path: C:/eigen3
          key: opencv-${{ runner.os }}-${{ hashFiles('scripts/build-eigen3.ps1') }}

      - name: Install Eigen v3.4.0 on Windows
        if: matrix.os == 'windows-latest'
        run: |
          Invoke-WebRequest -Uri https://gitlab.com/libeigen/eigen/-/archive/3.4.0/eigen-3.4.0.zip -OutFile eigen-3.4.0.zip
          Expand-Archive -Path eigen-3.4.0.zip -DestinationPath .
          Move-Item -Path eigen-3.4.0\Eigen -Destination C:\eigen3
        shell: pwsh

      - name: Build wheels
        uses: pypa/cibuildwheel@v2.14.1
        env:
          CIBW_ENVIRONMENT_WINDOWS: 'OpenCV_DIR="C:/opencv/" Eigen3_DIR="C:/eigen3"'
          CIBW_REPAIR_WHEEL_COMMAND_WINDOWS: "delvewheel repair -w {dest_dir} {wheel} --add-path C:/opencv/bin"

      - uses: actions/upload-artifact@v3
        with:
          path: ./wheelhouse/*.whl
